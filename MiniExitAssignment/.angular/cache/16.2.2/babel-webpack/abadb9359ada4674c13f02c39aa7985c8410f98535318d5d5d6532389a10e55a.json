{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddNoteComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"Note is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddNoteComponent {\n  get note() {\n    return this.Note.get('note');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Note = new FormGroup({\n      note: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  add() {\n    var _this = this,\n      _ref;\n    this.notesService.addNote(this.Note.value.note).subscribe(function (_x) {\n      return (_ref = _ref || _asyncToGenerator(function* (result) {\n        _this.r = result;\n        console.log(result);\n        if (result == null) {\n          _this.error = true;\n        } else {\n          if (_this.r.password == _this.Note.value.password) {\n            //this.notesService.generateToken(this.Note.value).subscribe(\n            //async (response: any) => {\n            // this.notesService.NoteUser(response.token);\n            // localStorage.setItem('logged', 'true');\n            yield Swal.fire({\n              title: \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n              timer: 1000,\n              showConfirmButton: false,\n              icon: 'success'\n            });\n            _this.router.navigate(['home'], {\n              queryParams: {\n                id: _this.r.userId\n              }\n            });\n            //};\n            // (error) => {\n            //   this.error = true;\n            // }\n            // );\n          } else {\n            yield Swal.fire({\n              title: \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n              icon: 'error'\n            });\n            _this.error = true;\n          }\n        }\n      })).apply(this, arguments);\n    });\n  }\n}\n_class = AddNoteComponent;\n_class.ɵfac = function AddNoteComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-note\"]],\n  decls: 19,\n  vars: 3,\n  consts: [[1, \"form-bg\"], [1, \"container\"], [1, \"row\"], [1, \"fixed-header\"], [1, \"form-container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Add a note\", \"id\", \"note\", \"name\", \"note\", \"formControlName\", \"note\", 1, \"form-control\"], [\"style\", \"color: red\", 4, \"ngIf\"], [1, \"btn\", \"signin\", \"mt-2\", 3, \"disabled\"], [\"href\", \"registration\", 2, \"font-size\", \"14px\"], [2, \"color\", \"red\"]],\n  template: function AddNoteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddNoteComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.add();\n      });\n      i0.ɵɵelementStart(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Add a Note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AddNoteComponent_span_10_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"button\", 10);\n      i0.ɵɵtext(13, \" Add \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \" Back \");\n      i0.ɵɵelementStart(17, \"a\", 11);\n      i0.ɵɵtext(18, \"Register\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.Note);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.note == null ? null : ctx.note.invalid) && (ctx.note == null ? null : ctx.note.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.Note.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddNoteComponent","note","Note","get","constructor","notesService","router","required","error","ngOnInit","add","_this","_ref","addNote","value","subscribe","_x","_asyncToGenerator","result","r","console","log","password","fire","title","timer","showConfirmButton","icon","navigate","queryParams","id","userId","apply","arguments","ɵɵdirectiveInject","i1","NotesService","i2","Router","selectors","decls","vars","consts","template","AddNoteComponent_Template","rf","ctx","ɵɵlistener","AddNoteComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵtemplate","AddNoteComponent_span_10_Template","ɵɵadvance","ɵɵproperty","invalid","touched"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\add-note\\add-note.component.ts","C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\add-note\\add-note.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotesService } from '../services/notes.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css'],\n})\nexport class AddNoteComponent {\n  Note = new FormGroup({\n    note: new FormControl('', Validators.required),\n  });\n  error = false;\n\n  get note() {\n    return this.Note.get('note');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n\n  add() {\n    this.notesService\n      .addNote(this.Note.value.note)\n      .subscribe(async (result) => {\n        this.r = result;\n        console.log(result);\n        if (result == null) {\n          this.error = true;\n        } else {\n          if (this.r.password == this.Note.value.password) {\n            //this.notesService.generateToken(this.Note.value).subscribe(\n            //async (response: any) => {\n            // this.notesService.NoteUser(response.token);\n            // localStorage.setItem('logged', 'true');\n            await Swal.fire({\n              title:\n                \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n              timer: 1000,\n              showConfirmButton: false,\n              icon: 'success',\n            });\n\n            this.router.navigate(['home'], {\n              queryParams: { id: this.r.userId },\n            });\n            //};\n            // (error) => {\n            //   this.error = true;\n            // }\n            // );\n          } else {\n            await Swal.fire({\n              title:\n                \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n              icon: 'error',\n            });\n            this.error = true;\n          }\n        }\n      });\n  }\n}\n","<div class=\"form-bg\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"fixed-header\">\n        <div class=\"form-container\">\n          <form [formGroup]=\"Note\" (ngSubmit)=\"add()\" class=\"form-horizontal\">\n            <h3 class=\"title\">Add a Note</h3>\n            <div class=\"form-group\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"Add a note\"\n                id=\"note\"\n                name=\"note\"\n                formControlName=\"note\"\n              />\n            </div>\n            <span style=\"color: red\" *ngIf=\"note?.invalid && note?.touched\"\n              >Note is required</span\n            >\n            <br />\n            <button class=\"btn signin mt-2\" [disabled]=\"Note.invalid\">\n              Add\n            </button>\n            <br />\n            <span>\n              Back\n              <a href=\"registration\" style=\"font-size: 14px\">Register</a>\n            </span>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}