{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../navbar/navbar.component\";\nfunction RegistrationComponent_label_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.msg);\n  }\n}\nfunction RegistrationComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Invalid Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegistrationComponent {\n  get email() {\n    return this.Registration.get('email');\n  }\n  get password() {\n    return this.Registration.get('password');\n  }\n  get confirmPassword() {\n    return this.Registration.get('confirmPassword');\n  }\n  constructor(noteService, router) {\n    this.noteService = noteService;\n    this.router = router;\n    this.Registration = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  register() {\n    var _this = this;\n    if (this.password?.value != this.confirmPassword?.value) {\n      this.error = true;\n      this.msg = 'Password and Confirm Password do not match!!!';\n      return;\n    }\n    this.noteService.getlogin(this.Registration.value.email).subscribe(result => {\n      this.r = result;\n      if (this.r == null) {\n        var _ref;\n        console.log(this.Registration.value);\n        this.noteService.postregister(this.Registration.value).subscribe(function (_x) {\n          return (_ref = _ref || _asyncToGenerator(function* (result) {\n            _this.r = result;\n            yield Swal.fire({\n              title: \"<h5 style='color:green;font-size:30px'>User Registered Successfully!</h5>\",\n              timer: 1000,\n              showConfirmButton: false,\n              icon: 'success'\n            });\n            _this.router.navigate(['login']);\n          })).apply(this, arguments);\n        });\n      } else {\n        this.error = true;\n        Swal.fire({\n          title: \"<h5 style='color:red;font-size:30px'>User Already Exists!!!!</h5>\",\n          showConfirmButton: true,\n          icon: 'error'\n        });\n        //this.msg = 'User Already Exists!!!';\n      }\n    });\n  }\n}\n_class = RegistrationComponent;\n_class.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-registration\"]],\n  decls: 36,\n  vars: 4,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\", \"integrity\", \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\", \"crossorigin\", \"anonymous\"], [1, \"form-bg\"], [1, \"container\"], [1, \"row\", \"mt-4\", 2, \"text-align\", \"center\"], [1, \"col\"], [1, \"title\"], [1, \"form-container\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-6\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Email *\", \"formControlName\", \"email\", \"email\", \"true\", 1, \"form-control\", \"inp\", \"p-4\", 2, \"background-color\", \"#dcdcdc\", \"font-weight\", \"bolder\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password *\", \"name\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"on\", 1, \"form-control\", \"p-4\", 2, \"background-color\", \"#dcdcdc\", \"font-weight\", \"bolder\"], [\"type\", \"password\", \"placeholder\", \"Confirm Password *\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"autocomplete\", \"on\", 1, \"form-control\", \"p-4\", 2, \"background-color\", \"#dcdcdc\", \"font-weight\", \"bolder\"], [1, \"btn\", \"mt-5\", 3, \"disabled\"], [1, \"user-login\"], [\"href\", \"login\"], [1, \"error\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Product Management System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\");\n      i0.ɵɵelement(6, \"app-navbar\");\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 2)(9, \"div\", 3)(10, \"div\", 4)(11, \"p\", 5);\n      i0.ɵɵtext(12, \"Register with your email and password:\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵtemplate(14, RegistrationComponent_label_14_Template, 2, 1, \"label\", 7);\n      i0.ɵɵelementStart(15, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_15_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10)(18, \"div\", 11);\n      i0.ɵɵelement(19, \"input\", 12);\n      i0.ɵɵtemplate(20, RegistrationComponent_span_20_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10)(24, \"div\", 11);\n      i0.ɵɵelement(25, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 9)(27, \"div\", 10)(28, \"div\", 11);\n      i0.ɵɵelement(29, \"input\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"button\", 15);\n      i0.ɵɵtext(31, \" SUBMIT \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementStart(33, \"h6\", 16)(34, \"a\", 17);\n      i0.ɵɵtext(35, \"Have an account already?\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.Registration);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.touched && ctx.email.invalid);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", ctx.Registration.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.EmailValidator, i4.FormGroupDirective, i4.FormControlName, i5.NavbarComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","msg","RegistrationComponent","email","Registration","get","password","confirmPassword","constructor","noteService","router","required","error","ngOnInit","register","_this","value","getlogin","subscribe","result","r","_ref","console","log","postregister","_x","_asyncToGenerator","fire","title","timer","showConfirmButton","icon","navigate","apply","arguments","ɵɵdirectiveInject","i1","NotesService","i2","Router","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","RegistrationComponent_label_14_Template","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_15_listener","RegistrationComponent_span_20_Template","ɵɵproperty","touched","invalid"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\registration\\registration.component.ts","C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NotesService } from '../services/notes.service';\nimport { Router } from '@angular/router';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n})\nexport class RegistrationComponent {\n  Registration = new FormGroup({\n    email: new FormControl('', [Validators.email, Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    confirmPassword: new FormControl('', [Validators.required]),\n  });\n  error = false;\n\n  get email() {\n    return this.Registration.get('email');\n  }\n  get password() {\n    return this.Registration.get('password');\n  }\n  get confirmPassword() {\n    return this.Registration.get('confirmPassword');\n  }\n\n  constructor(private noteService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n  msg: any;\n  register() {\n    if (this.password?.value != this.confirmPassword?.value) {\n      this.error = true;\n      this.msg = 'Password and Confirm Password do not match!!!';\n      return;\n    }\n\n    this.noteService\n      .getlogin(this.Registration.value.email)\n      .subscribe((result) => {\n        this.r = result;\n\n        if (this.r == null) {\n          console.log(this.Registration.value);\n          this.noteService\n            .postregister(this.Registration.value)\n            .subscribe(async (result) => {\n              this.r = result;\n              await Swal.fire({\n                title:\n                  \"<h5 style='color:green;font-size:30px'>User Registered Successfully!</h5>\",\n                timer: 1000,\n                showConfirmButton: false,\n                icon: 'success',\n              });\n              this.router.navigate(['login']);\n            });\n        } else {\n          this.error = true;\n          Swal.fire({\n            title:\n              \"<h5 style='color:red;font-size:30px'>User Already Exists!!!!</h5>\",\n            showConfirmButton: true,\n            icon: 'error',\n          });\n          //this.msg = 'User Already Exists!!!';\n        }\n      });\n  }\n}\n","<html>\n  <head>\n    <title>Product Management System</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body>\n    <app-navbar></app-navbar>\n    <div class=\"form-bg\">\n      <div class=\"container\">\n        <div class=\"row mt-4\" style=\"text-align: center\">\n          <div class=\"col\">\n            <p class=\"title\">Register with your email and password:</p>\n          </div>\n        </div>\n        <div class=\"form-container\">\n          <label *ngIf=\"error\" class=\"error\">{{ msg }}</label>\n          <form\n            [formGroup]=\"Registration\"\n            (ngSubmit)=\"register()\"\n            class=\"form-horizontal\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control inp p-4\"\n                    style=\"background-color: #dcdcdc; font-weight: bolder\"\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email *\"\n                    formControlName=\"email\"\n                    email=\"true\"\n                  />\n                  <span\n                    class=\"error\"\n                    *ngIf=\"email && email.touched && email.invalid\"\n                    >Invalid Email</span\n                  >\n                </div>\n                <br />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control p-4\"\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password *\"\n                    style=\"background-color: #dcdcdc; font-weight: bolder\"\n                    name=\"password\"\n                    formControlName=\"password\"\n                    autocomplete=\"on\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control p-4\"\n                    type=\"password\"\n                    placeholder=\"Confirm Password *\"\n                    id=\"confirmPassword\"\n                    style=\"background-color: #dcdcdc; font-weight: bolder\"\n                    name=\"confirmPassword\"\n                    formControlName=\"confirmPassword\"\n                    autocomplete=\"on\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button class=\"btn mt-5\" [disabled]=\"Registration.invalid\">\n              SUBMIT\n            </button>\n            <br />\n            <h6 class=\"user-login\">\n              <a href=\"login\">Have an account already?</a>\n            </h6>\n          </form>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}