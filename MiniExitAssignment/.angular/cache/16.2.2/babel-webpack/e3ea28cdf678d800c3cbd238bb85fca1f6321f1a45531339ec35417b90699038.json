{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let AddNoteComponent = class AddNoteComponent {\n  get note() {\n    return this.Note.get('note');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Note = new FormGroup({\n      note: new FormControl('', [Validators.required, this.maxWordsValidator(500), this.specialCharactersValidator()])\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  maxWordsValidator(maxWords) {\n    return control => {\n      const words = control.value ? control.value.trim().split(/\\s+/) : [];\n      return words.length > maxWords ? {\n        maxWords: true\n      } : null;\n    };\n  }\n  specialCharactersValidator() {\n    return control => {\n      const specialCharsPattern = /^[a-zA-Z0-9@;&*+-,\\-\\s]+$/;\n      const containsSpecialChars = !specialCharsPattern.test(control.value);\n      return containsSpecialChars ? {\n        invalidSpecialChars: true\n      } : null;\n    };\n  }\n  add() {\n    var _this = this,\n      _ref;\n    let note = this.Note.value;\n    console.log(note);\n    note.userId = localStorage.getItem('id');\n    console.log(note);\n    let now = new Date().toLocaleString();\n    //console.log(now.toLocaleDateString() + ' ' + now.toLocaleTimeString());\n    // note.creationTime = now.toLocaleDateString() + now.toLocaleTimeString();\n    //note.creationTime = now;\n    this.notesService.addNote(note).subscribe(function (_x) {\n      return (_ref = _ref || _asyncToGenerator(function* (result) {\n        _this.r = result;\n        console.log(result);\n        if (result == null) {\n          _this.error = true;\n        } else {\n          // if (this.r.password == this.Note.value.password) {\n          //this.notesService.generateToken(this.Note.value).subscribe(\n          //async (response: any) => {\n          // this.notesService.NoteUser(response.token);\n          // localStorage.setItem('logged', 'true');\n          yield Swal.fire({\n            title: \"<h5 style='color:green;font-size:35px'>Note Added!</h5>\",\n            timer: 1000,\n            showConfirmButton: false,\n            icon: 'success'\n          });\n          _this.router.navigate(['home']);\n          //};\n          // (error) => {\n          //   this.error = true;\n          // }\n          // );\n          // } else {\n          //   await Swal.fire({\n          //     title:\n          //       \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n          //     icon: 'error',\n          //   });\n          //   this.error = true;\n          // }\n        }\n      })).apply(this, arguments);\n    });\n  }\n};\nAddNoteComponent = __decorate([Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css']\n})], AddNoteComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","Swal","AddNoteComponent","note","Note","get","constructor","notesService","router","required","maxWordsValidator","specialCharactersValidator","error","ngOnInit","maxWords","control","words","value","trim","split","length","specialCharsPattern","containsSpecialChars","test","invalidSpecialChars","add","_this","_ref","console","log","userId","localStorage","getItem","now","Date","toLocaleString","addNote","subscribe","_x","_asyncToGenerator","result","r","fire","title","timer","showConfirmButton","icon","navigate","apply","arguments","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\add-note\\add-note.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotesService } from '../services/notes.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css'],\n})\nexport class AddNoteComponent {\n  Note = new FormGroup({\n    note: new FormControl('', [\n      Validators.required,\n      this.maxWordsValidator(500),\n      this.specialCharactersValidator(),\n    ]),\n  });\n\n  get note() {\n    return this.Note.get('note');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n  error = false;\n\n  maxWordsValidator(maxWords: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const words = control.value ? control.value.trim().split(/\\s+/) : [];\n      return words.length > maxWords ? { maxWords: true } : null;\n    };\n  }\n  specialCharactersValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const specialCharsPattern = /^[a-zA-Z0-9@;&*+-,\\-\\s]+$/;\n      const containsSpecialChars = !specialCharsPattern.test(control.value);\n      return containsSpecialChars ? { invalidSpecialChars: true } : null;\n    };\n  }\n\n  add() {\n    let note: any = this.Note.value;\n    console.log(note);\n    note.userId = localStorage.getItem('id');\n    console.log(note);\n    let now = new Date().toLocaleString();\n    //console.log(now.toLocaleDateString() + ' ' + now.toLocaleTimeString());\n    // note.creationTime = now.toLocaleDateString() + now.toLocaleTimeString();\n    //note.creationTime = now;\n    this.notesService.addNote(note).subscribe(async (result) => {\n      this.r = result;\n      console.log(result);\n      if (result == null) {\n        this.error = true;\n      } else {\n        // if (this.r.password == this.Note.value.password) {\n        //this.notesService.generateToken(this.Note.value).subscribe(\n        //async (response: any) => {\n        // this.notesService.NoteUser(response.token);\n        // localStorage.setItem('logged', 'true');\n        await Swal.fire({\n          title: \"<h5 style='color:green;font-size:35px'>Note Added!</h5>\",\n          timer: 1000,\n          showConfirmButton: false,\n          icon: 'success',\n        });\n\n        this.router.navigate(['home']);\n        //};\n        // (error) => {\n        //   this.error = true;\n        // }\n        // );\n        // } else {\n        //   await Swal.fire({\n        //     title:\n        //       \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n        //     icon: 'error',\n        //   });\n        //   this.error = true;\n        // }\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}