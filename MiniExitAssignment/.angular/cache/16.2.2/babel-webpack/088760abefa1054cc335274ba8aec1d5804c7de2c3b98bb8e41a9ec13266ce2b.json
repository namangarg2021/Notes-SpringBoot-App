{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotesService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:9090/';\n  }\n  //calling the server to generate token\n  // generateToken(credentials: {}) {\n  //   return this.http.post(this.url + 'api/generate-token', credentials);\n  // }\n  // loginUser(token: any) {\n  //   localStorage.setItem('token', token);\n  //   return true;\n  // }\n  // isLoggedIn() {\n  //   let token = localStorage.getItem('token');\n  //   if (token == undefined || token == null || token == '') {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n  // removeToken() {\n  //   localStorage.removeItem('token');\n  //   return true;\n  // }\n  // getToken() {\n  //   return localStorage.getItem('token');\n  // }\n  getlogin(email) {\n    return this.http.get(this.url + 'users/email/' + email);\n  }\n  postregister(data) {\n    return this.http.post(this.url + 'users', data);\n  }\n  getProducts() {\n    return this.http.get(this.url + 'users');\n  }\n  // getCode(code: any) {\n  //   return this.http.get(this.url + 'products/code/' + code);\n  // }\n  // getPrice(price: any) {\n  //   return this.http.get(this.url + 'products/price/' + price);\n  // }\n  // getName(name: any) {\n  //   return this.http.get(this.url + 'products/name/' + name);\n  // }\n  // getBrand(brand: any) {\n  //   return this.http.get(this.url + 'products/brand/' + brand);\n  // }\n  // getID(id: any) {\n  //   return this.http.get(this.url + 'products/id/' + id);\n  // }\n  // getpincode(id: any, pincode: any) {\n  //   return this.http.get(this.url + 'serviceability/' + id + '/' + pincode);\n  // }\n  getAllNotes(id) {\n    console.log(this.url + 'users/' + id);\n    return this.http.get(this.url + 'users/id/' + id);\n  }\n}\n_class = NotesService;\n_class.ɵfac = function NotesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NotesService","constructor","http","url","getlogin","email","get","postregister","data","post","getProducts","getAllNotes","id","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\services\\notes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotesService {\n  constructor(private http: HttpClient) {}\n\n  url = 'http://localhost:9090/';\n\n  //calling the server to generate token\n  // generateToken(credentials: {}) {\n  //   return this.http.post(this.url + 'api/generate-token', credentials);\n  // }\n\n  // loginUser(token: any) {\n  //   localStorage.setItem('token', token);\n  //   return true;\n  // }\n  // isLoggedIn() {\n  //   let token = localStorage.getItem('token');\n  //   if (token == undefined || token == null || token == '') {\n  //     return false;\n  //   }\n  //   return true;\n  // }\n\n  // removeToken() {\n  //   localStorage.removeItem('token');\n  //   return true;\n  // }\n\n  // getToken() {\n  //   return localStorage.getItem('token');\n  // }\n\n  getlogin(email: any) {\n    return this.http.get(this.url + 'users/email/' + email);\n  }\n\n  postregister(data: any) {\n    return this.http.post(this.url + 'users', data);\n  }\n\n  getProducts() {\n    return this.http.get(this.url + 'users');\n  }\n\n  // getCode(code: any) {\n  //   return this.http.get(this.url + 'products/code/' + code);\n  // }\n\n  // getPrice(price: any) {\n  //   return this.http.get(this.url + 'products/price/' + price);\n  // }\n\n  // getName(name: any) {\n  //   return this.http.get(this.url + 'products/name/' + name);\n  // }\n\n  // getBrand(brand: any) {\n  //   return this.http.get(this.url + 'products/brand/' + brand);\n  // }\n\n  // getID(id: any) {\n  //   return this.http.get(this.url + 'products/id/' + id);\n  // }\n\n  // getpincode(id: any, pincode: any) {\n  //   return this.http.get(this.url + 'serviceability/' + id + '/' + pincode);\n  // }\n  getAllNotes(id: any) {\n    console.log(this.url + 'users/' + id);\n    return this.http.get(this.url + 'users/id/' + id);\n  }\n}\n"],"mappings":";;;AAKA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,wBAAwB;EAFS;EAIvC;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEAC,QAAQA,CAACC,KAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAG,cAAc,GAAGE,KAAK,CAAC;EACzD;EAEAE,YAAYA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,GAAG,GAAG,OAAO,EAAEK,IAAI,CAAC;EACjD;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAG,OAAO,CAAC;EAC1C;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACAQ,WAAWA,CAACC,EAAO;IACjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,GAAG,GAAG,QAAQ,GAAGS,EAAE,CAAC;IACrC,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,GAAG,GAAG,WAAW,GAAGS,EAAE,CAAC;EACnD;;SArEWZ,YAAY;;mBAAZA,MAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZlB,MAAY;EAAAmB,OAAA,EAAZnB,MAAY,CAAAoB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}