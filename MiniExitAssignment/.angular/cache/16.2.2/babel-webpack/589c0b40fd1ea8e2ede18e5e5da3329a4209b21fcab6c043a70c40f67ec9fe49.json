{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AddNoteComponent = class AddNoteComponent {\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Login = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  login() {\n    var _this = this,\n      _ref;\n    this.notesService.getlogin(this.Login.value.email).subscribe(function (_x) {\n      return (_ref = _ref || _asyncToGenerator(function* (result) {\n        _this.r = result;\n        console.log(result);\n        if (result == null) {\n          _this.error = true;\n        } else {\n          if (_this.r.password == _this.Login.value.password) {\n            //this.notesService.generateToken(this.Login.value).subscribe(\n            //async (response: any) => {\n            // this.notesService.loginUser(response.token);\n            // localStorage.setItem('logged', 'true');\n            yield Swal.fire({\n              title: \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n              timer: 1000,\n              showConfirmButton: false,\n              icon: 'success'\n            });\n            console.log('jank');\n            _this.router.navigate(['home'], {\n              queryParams: {\n                id: _this.r.userId\n              }\n            });\n            //};\n            // (error) => {\n            //   this.error = true;\n            // }\n            // );\n          } else {\n            yield Swal.fire({\n              title: \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n              icon: 'error'\n            });\n            _this.error = true;\n          }\n        }\n      })).apply(this, arguments);\n    });\n  }\n};\nAddNoteComponent = __decorate([Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css']\n})], AddNoteComponent);","map":{"version":3,"names":["Component","AddNoteComponent","email","Login","get","password","constructor","notesService","router","FormGroup","FormControl","Validators","required","error","ngOnInit","login","_this","_ref","getlogin","value","subscribe","_x","_asyncToGenerator","result","r","console","log","Swal","fire","title","timer","showConfirmButton","icon","navigate","queryParams","id","userId","apply","arguments","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\add-note\\add-note.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.css'],\n})\nexport class AddNoteComponent {\n  Login = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n  error = false;\n\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n\n  login() {\n    this.notesService\n      .getlogin(this.Login.value.email)\n      .subscribe(async (result) => {\n        this.r = result;\n        console.log(result);\n        if (result == null) {\n          this.error = true;\n        } else {\n          if (this.r.password == this.Login.value.password) {\n            //this.notesService.generateToken(this.Login.value).subscribe(\n            //async (response: any) => {\n            // this.notesService.loginUser(response.token);\n            // localStorage.setItem('logged', 'true');\n            await Swal.fire({\n              title:\n                \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n              timer: 1000,\n              showConfirmButton: false,\n              icon: 'success',\n            });\n            console.log('jank');\n            this.router.navigate(['home'], {\n              queryParams: { id: this.r.userId },\n            });\n            //};\n            // (error) => {\n            //   this.error = true;\n            // }\n            // );\n          } else {\n            await Swal.fire({\n              title:\n                \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n              icon: 'error',\n            });\n            this.error = true;\n          }\n        }\n      });\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3B,IAAIC,KAAKA,CAAA;IACP,OAAO,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,OAAO,CAAC;EAChC;EACA,IAAIC,QAAQA,CAAA;IACV,OAAO,IAAI,CAACF,KAAK,CAACC,GAAG,CAAC,UAAU,CAAC;EACnC;EAEAE,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAb9D,KAAAL,KAAK,GAAG,IAAIM,SAAS,CAAC;MACpBP,KAAK,EAAE,IAAIQ,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/CP,QAAQ,EAAE,IAAIK,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ;KAClD,CAAC;IACF,KAAAC,KAAK,GAAG,KAAK;EAS4D;EAEzEC,QAAQA,CAAA,GAAU;EAGlBC,KAAKA,CAAA;IAAA,IAAAC,KAAA;MAAAC,IAAA;IACH,IAAI,CAACV,YAAY,CACdW,QAAQ,CAAC,IAAI,CAACf,KAAK,CAACgB,KAAK,CAACjB,KAAK,CAAC,CAChCkB,SAAS,WAAAC,EAAA;MAAA,QAAAJ,IAAA,GAAAA,IAAA,IAAAK,iBAAA,CAAC,WAAOC,MAAM,EAAI;QAC1BP,KAAI,CAACQ,CAAC,GAAGD,MAAM;QACfE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;QACnB,IAAIA,MAAM,IAAI,IAAI,EAAE;UAClBP,KAAI,CAACH,KAAK,GAAG,IAAI;SAClB,MAAM;UACL,IAAIG,KAAI,CAACQ,CAAC,CAACnB,QAAQ,IAAIW,KAAI,CAACb,KAAK,CAACgB,KAAK,CAACd,QAAQ,EAAE;YAChD;YACA;YACA;YACA;YACA,MAAMsB,IAAI,CAACC,IAAI,CAAC;cACdC,KAAK,EACH,wEAAwE;cAC1EC,KAAK,EAAE,IAAI;cACXC,iBAAiB,EAAE,KAAK;cACxBC,IAAI,EAAE;aACP,CAAC;YACFP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;YACnBV,KAAI,CAACR,MAAM,CAACyB,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE;cAC7BC,WAAW,EAAE;gBAAEC,EAAE,EAAEnB,KAAI,CAACQ,CAAC,CAACY;cAAM;aACjC,CAAC;YACF;YACA;YACA;YACA;YACA;WACD,MAAM;YACL,MAAMT,IAAI,CAACC,IAAI,CAAC;cACdC,KAAK,EACH,gEAAgE;cAClEG,IAAI,EAAE;aACP,CAAC;YACFhB,KAAI,CAACH,KAAK,GAAG,IAAI;;;MAGvB,CAAC,GAAAwB,KAAA,OAAAC,SAAA;IAAA,EAAC;EACN;CACD;AA5DYrC,gBAAgB,GAAAsC,UAAA,EAL5BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWzC,gBAAgB,CA4D5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}