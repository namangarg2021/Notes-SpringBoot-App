{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n// import Swal from 'sweetalert2';\nexport class LoginComponent {\n  get username() {\n    return this.Login.get('username');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Login = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  login() {\n    // this.notesService\n    //   .getlogin(this.Login.value.username)\n    //   .subscribe(async (result) => {\n    //     this.r = result;\n    //     if (result == null) {\n    //       this.error = true;\n    //     } else {\n    //       if (this.r.password == this.Login.value.password) {\n    //         this.notesService.generateToken(this.Login.value).subscribe(\n    //           async (response: any) => {\n    //             this.notesService.loginUser(response.token);\n    //             localStorage.setItem('logged', 'true');\n    //             await Swal.fire({\n    //               title:\n    //                 \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n    //               timer: 1000,\n    //               showConfirmButton: false,\n    //               icon: 'success',\n    //             });\n    //             this.router.navigate(['home']);\n    //           },\n    //           (error) => {\n    //             this.error = true;\n    //           }\n    //         );\n    //       } else {\n    //         await Swal.fire({\n    //           title:\n    //             \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n    //           icon: 'error',\n    //         });\n    //         this.error = true;\n    //       }\n    //     }\n    //   });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\", \"integrity\", \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\", \"crossorigin\", \"anonymous\"], [1, \"form-bg\"], [1, \"container\"], [1, \"row\"], [1, \"fixed-header\"], [1, \"form-container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [1, \"form-group\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"username\", 1, \"form-control\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"on\", 1, \"form-control\"], [1, \"btn\", \"signin\", \"mt-2\", 3, \"disabled\"], [1, \"register\"], [\"href\", \"registration\", 2, \"font-size\", \"14px\"], [2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Notes Management System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\")(6, \"div\", 1)(7, \"div\", 2)(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(12, \"h3\", 7);\n      i0.ɵɵtext(13, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_span_16_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, LoginComponent_span_19_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \" Log in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"span\", 13);\n      i0.ɵɵtext(25, \" Do Not Have an Account? Click Here to \");\n      i0.ɵɵelementStart(26, \"a\", 14);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.Login);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.username && ctx.username.invalid && ctx.username.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.Login.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","username","Login","get","password","constructor","notesService","router","required","error","ngOnInit","login","ɵɵdirectiveInject","i1","NotesService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","LoginComponent_span_16_Template","LoginComponent_span_19_Template","ɵɵadvance","ɵɵproperty","invalid","touched"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.ts","C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotesService } from '../services/notes.service';\n// import Swal from 'sweetalert2';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass'],\n})\nexport class LoginComponent {\n  Login = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n  error = false;\n\n  get username() {\n    return this.Login.get('username');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n\n  login() {\n    // this.notesService\n    //   .getlogin(this.Login.value.username)\n    //   .subscribe(async (result) => {\n    //     this.r = result;\n    //     if (result == null) {\n    //       this.error = true;\n    //     } else {\n    //       if (this.r.password == this.Login.value.password) {\n    //         this.notesService.generateToken(this.Login.value).subscribe(\n    //           async (response: any) => {\n    //             this.notesService.loginUser(response.token);\n    //             localStorage.setItem('logged', 'true');\n    //             await Swal.fire({\n    //               title:\n    //                 \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n    //               timer: 1000,\n    //               showConfirmButton: false,\n    //               icon: 'success',\n    //             });\n    //             this.router.navigate(['home']);\n    //           },\n    //           (error) => {\n    //             this.error = true;\n    //           }\n    //         );\n    //       } else {\n    //         await Swal.fire({\n    //           title:\n    //             \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n    //           icon: 'error',\n    //         });\n    //         this.error = true;\n    //       }\n    //     }\n    //   });\n  }\n}\n","<html>\n  <head>\n    <title>Notes Management System</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body>\n    <!-- <app-navbar></app-navbar> -->\n    <div class=\"form-bg\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"fixed-header\">\n            <div class=\"form-container\">\n              <form\n                [formGroup]=\"Login\"\n                (ngSubmit)=\"login()\"\n                class=\"form-horizontal\"\n              >\n                <h3 class=\"title\">Login Form</h3>\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    formControlName=\"username\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"username && username.invalid && username.touched\"\n                  >Email is required</span\n                >\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    id=\"password\"\n                    name=\"password\"\n                    formControlName=\"password\"\n                    autocomplete=\"on\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"password?.invalid && password?.touched\"\n                  >Password is required</span\n                >\n                <br />\n                <button class=\"btn signin mt-2\" [disabled]=\"Login.invalid\">\n                  Log in\n                </button>\n                <br />\n                <span class=\"register\">\n                  Do Not Have an Account? Click Here to\n                  <a href=\"registration\" style=\"font-size: 14px\">Register</a>\n                </span>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}