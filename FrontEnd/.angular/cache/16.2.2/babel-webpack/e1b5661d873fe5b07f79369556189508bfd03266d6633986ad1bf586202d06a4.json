{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotesService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:9090/';\n  }\n  //calling the server to generate token\n  // generateToken(credentials: {}) {\n  //   return this.http.post(this.url + 'api/generate-token', credentials);\n  // }\n  // loginUser(token: any) {\n  //   localStorage.setItem('token', token);\n  //   return true;\n  // }\n  isLoggedIn() {\n    // let token = localStorage.getItem('token');\n    // if (token == undefined || token == null || token == '') {\n    //   return false;\n    // }\n    return true;\n  }\n  // removeToken() {\n  //   localStorage.removeItem('token');\n  //   return true;\n  // }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  getlogin(email) {\n    return this.http.get(this.url + 'users/email/' + email);\n  }\n  postregister(data) {\n    return this.http.post(this.url + 'users', data);\n  }\n  // getProducts() {\n  //   return this.http.get(this.url + 'users');\n  // }\n  getAllNotes(id) {\n    console.log(this.url + 'notes/id/' + id);\n    return this.http.get(this.url + 'notes/id/' + id);\n  }\n  addNote(note) {\n    return this.http.post(this.url + 'notes/', note);\n  }\n  deleteNote(id) {\n    return this.http.delete(this.url + 'notes/' + id);\n  }\n}\n_class = NotesService;\n_class.ɵfac = function NotesService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NotesService","constructor","http","url","isLoggedIn","getToken","localStorage","getItem","getlogin","email","get","postregister","data","post","getAllNotes","id","console","log","addNote","note","deleteNote","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\services\\notes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotesService {\n  constructor(private http: HttpClient) {}\n\n  url = 'http://localhost:9090/';\n\n  //calling the server to generate token\n  // generateToken(credentials: {}) {\n  //   return this.http.post(this.url + 'api/generate-token', credentials);\n  // }\n\n  // loginUser(token: any) {\n  //   localStorage.setItem('token', token);\n  //   return true;\n  // }\n  isLoggedIn() {\n    // let token = localStorage.getItem('token');\n    // if (token == undefined || token == null || token == '') {\n    //   return false;\n    // }\n    return true;\n  }\n\n  // removeToken() {\n  //   localStorage.removeItem('token');\n  //   return true;\n  // }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  getlogin(email: any) {\n    return this.http.get(this.url + 'users/email/' + email);\n  }\n\n  postregister(data: any) {\n    return this.http.post(this.url + 'users', data);\n  }\n\n  // getProducts() {\n  //   return this.http.get(this.url + 'users');\n  // }\n\n  getAllNotes(id: any) {\n    console.log(this.url + 'notes/id/' + id);\n    return this.http.get(this.url + 'notes/id/' + id);\n  }\n  addNote(note: any) {\n    return this.http.post(this.url + 'notes/', note);\n  }\n  deleteNote(id: any) {\n    return this.http.delete(this.url + 'notes/' + id);\n  }\n}\n"],"mappings":";;;AAKA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,wBAAwB;EAFS;EAIvC;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACAC,UAAUA,CAAA;IACR;IACA;IACA;IACA;IACA,OAAO,IAAI;EACb;EAEA;EACA;EACA;EACA;EAEAC,QAAQA,CAAA;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,QAAQA,CAACC,KAAU;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,GAAG,GAAG,cAAc,GAAGM,KAAK,CAAC;EACzD;EAEAE,YAAYA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,GAAG,OAAO,EAAES,IAAI,CAAC;EACjD;EAEA;EACA;EACA;EAEAE,WAAWA,CAACC,EAAO;IACjBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,GAAG,GAAG,WAAW,GAAGY,EAAE,CAAC;IACxC,OAAO,IAAI,CAACb,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACP,GAAG,GAAG,WAAW,GAAGY,EAAE,CAAC;EACnD;EACAG,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACjB,IAAI,CAACW,IAAI,CAAC,IAAI,CAACV,GAAG,GAAG,QAAQ,EAAEgB,IAAI,CAAC;EAClD;EACAC,UAAUA,CAACL,EAAO;IAChB,OAAO,IAAI,CAACb,IAAI,CAACmB,MAAM,CAAC,IAAI,CAAClB,GAAG,GAAG,QAAQ,GAAGY,EAAE,CAAC;EACnD;;SApDWf,YAAY;;mBAAZA,MAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZzB,MAAY;EAAA0B,OAAA,EAAZ1B,MAAY,CAAA2B,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}