{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n// import Swal from 'sweetalert2';\nexport class LoginComponent {\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Login = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  login() {\n    var _this = this,\n      _ref;\n    this.notesService.getlogin(this.Login.value.email).subscribe(function (_x) {\n      return (_ref = _ref || _asyncToGenerator(function* (result) {\n        _this.r = result;\n        console.log(result);\n        if (result == null) {\n          _this.error = true;\n        } else {\n          if (_this.r.password == _this.Login.value.password) {\n            //this.notesService.generateToken(this.Login.value).subscribe(\n            // async (response: any) => {\n            //   this.notesService.loginUser(response.token);\n            //   localStorage.setItem('logged', 'true');\n            //   await Swal.fire({\n            //     title:\n            //       \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n            //     timer: 1000,\n            //     showConfirmButton: false,\n            //     icon: 'success',\n            //   });\n            _this.router.navigate([`notes/${result.userId}`]);\n            //},\n            // (error) => {\n            //   this.error = true;\n            // }\n            //);\n          } else {\n            // await Swal.fire({\n            //   title:\n            //     \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n            //   icon: 'error',\n            // });\n            _this.error = true;\n          }\n        }\n      })).apply(this, arguments);\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\", \"integrity\", \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\", \"crossorigin\", \"anonymous\"], [1, \"form-bg\"], [1, \"container\"], [1, \"row\"], [1, \"fixed-header\"], [1, \"form-container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [1, \"form-group\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"on\", 1, \"form-control\"], [1, \"btn\", \"signin\", \"mt-2\", 3, \"disabled\"], [1, \"register\"], [\"href\", \"registration\", 2, \"font-size\", \"14px\"], [2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Notes Management System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\")(6, \"div\", 1)(7, \"div\", 2)(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(12, \"h3\", 7);\n      i0.ɵɵtext(13, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_span_16_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, LoginComponent_span_19_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \" Log in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\");\n      i0.ɵɵelementStart(24, \"span\", 13);\n      i0.ɵɵtext(25, \" Do Not Have an Account? Click Here to \");\n      i0.ɵɵelementStart(26, \"a\", 14);\n      i0.ɵɵtext(27, \"Register\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.Login);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.invalid && ctx.email.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.Login.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(to right, #fc5c7d, #6a82fb);\\n  height: 668px;\\n}\\n.form-container[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  display: block;\\n  margin-left: 80%;\\n  margin-top: 30%;\\n  text-align: left;\\n  width: 200%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDZEQUE2RDtFQUM3RCxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGtDQUFrQztFQUNsQyxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZmM1YzdkLCAjNmE4MmZiKTtcclxuICBoZWlnaHQ6IDY2OHB4O1xyXG59XHJcbi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiA4MCU7XHJcbiAgbWFyZ2luLXRvcDogMzAlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgd2lkdGg6IDIwMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","email","Login","get","password","constructor","notesService","router","required","error","ngOnInit","login","_this","_ref","getlogin","value","subscribe","_x","_asyncToGenerator","result","r","console","log","navigate","userId","apply","arguments","ɵɵdirectiveInject","i1","NotesService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","LoginComponent_span_16_Template","LoginComponent_span_19_Template","ɵɵadvance","ɵɵproperty","invalid","touched"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.ts","C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotesService } from '../services/notes.service';\n// import Swal from 'sweetalert2';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  Login = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n  error = false;\n\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n\n  login() {\n    this.notesService\n      .getlogin(this.Login.value.email)\n      .subscribe(async (result) => {\n        this.r = result;\n        console.log(result);\n        if (result == null) {\n          this.error = true;\n        } else {\n          if (this.r.password == this.Login.value.password) {\n            //this.notesService.generateToken(this.Login.value).subscribe(\n            // async (response: any) => {\n            //   this.notesService.loginUser(response.token);\n            //   localStorage.setItem('logged', 'true');\n            //   await Swal.fire({\n            //     title:\n            //       \"<h5 style='color:green;font-size:35px'>Logging In...Please Wait !</h5>\",\n            //     timer: 1000,\n            //     showConfirmButton: false,\n            //     icon: 'success',\n            //   });\n            this.router.navigate([`notes/${result.userId}`]);\n            //},\n            // (error) => {\n            //   this.error = true;\n            // }\n            //);\n          } else {\n            // await Swal.fire({\n            //   title:\n            //     \"<h5 style='color:red;font-size:30px'>Wrong Credentials!!!</h5>\",\n            //   icon: 'error',\n            // });\n            this.error = true;\n          }\n        }\n      });\n  }\n}\n","<html>\n  <head>\n    <title>Notes Management System</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body>\n    <!-- <app-navbar></app-navbar> -->\n    <div class=\"form-bg\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"fixed-header\">\n            <div class=\"form-container\">\n              <form\n                [formGroup]=\"Login\"\n                (ngSubmit)=\"login()\"\n                class=\"form-horizontal\"\n              >\n                <h3 class=\"title\">Login Form</h3>\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    formControlName=\"email\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"email && email.invalid && email.touched\"\n                  >Email is required</span\n                >\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    id=\"password\"\n                    name=\"password\"\n                    formControlName=\"password\"\n                    autocomplete=\"on\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"password?.invalid && password?.touched\"\n                  >Password is required</span\n                >\n                <br />\n                <button class=\"btn signin mt-2\" [disabled]=\"Login.invalid\">\n                  Log in\n                </button>\n                <br />\n                <span class=\"register\">\n                  Do Not Have an Account? Click Here to\n                  <a href=\"registration\" style=\"font-size: 14px\">Register</a>\n                </span>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}