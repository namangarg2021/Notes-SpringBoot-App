{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/namangarg01/Desktop/Angular Codes/MiniExitAssignment/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../navbar/navbar.component\";\nfunction LoginComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n// import Swal from 'sweetalert2';\nexport class LoginComponent {\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n  constructor(notesService, router) {\n    this.notesService = notesService;\n    this.router = router;\n    this.Login = new FormGroup({\n      email: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  login() {\n    var _this = this,\n      _ref;\n    this.notesService.login(this.Login.value).subscribe(function (_x) {\n      return (_ref = _ref || _asyncToGenerator(function* (token) {\n        _this.r = JSON.parse(token);\n        console.log(_this.r.token);\n        if (_this.r.token === 'Bad ') {\n          yield Swal.fire({\n            title: \"<h5 style='color:red;font-size:20px'>Wrong Credentials!!!</h5>\",\n            icon: 'error'\n          });\n          _this.error = true;\n        } else {\n          const helper = new JwtHelperService();\n          const decodedToken = helper.decodeToken(token);\n          console.log(decodedToken);\n          _this.notesService.loginUser(_this.r.token);\n          yield Swal.fire({\n            title: \"<h5 style='color:green;font-size:25px'>Logging In...Please Wait !</h5>\",\n            timer: 1000,\n            showConfirmButton: false,\n            icon: 'success'\n          });\n          localStorage.setItem('id', decodedToken.id);\n          _this.router.navigate(['home']);\n        }\n      })).apply(this, arguments);\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 31,\n  vars: 4,\n  consts: [[\"rel\", \"stylesheet\", \"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\", \"integrity\", \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\", \"crossorigin\", \"anonymous\"], [1, \"form-bg\"], [1, \"container\"], [1, \"row\"], [1, \"fixed-header\"], [1, \"form-container\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"title\"], [1, \"form-group\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"on\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"signin\", \"mt-2\", 3, \"disabled\"], [1, \"register\"], [\"href\", \"registration\", 2, \"font-size\", \"16px\"], [2, \"color\", \"red\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Notes Management System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"link\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"body\");\n      i0.ɵɵelement(6, \"app-navbar\");\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 2)(9, \"div\", 3)(10, \"div\", 4)(11, \"div\", 5)(12, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(13, \"h3\", 7);\n      i0.ɵɵtext(14, \"Login Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\", 8);\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, LoginComponent_span_18_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementStart(19, \"div\", 8);\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, LoginComponent_span_21_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"button\", 12);\n      i0.ɵɵtext(24, \" Log in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementStart(27, \"h6\", 13);\n      i0.ɵɵtext(28, \" Do Not Have an Account? Click Here to \");\n      i0.ɵɵelementStart(29, \"a\", 14);\n      i0.ɵɵtext(30, \"Register\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", ctx.Login);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.email && ctx.email.invalid && ctx.email.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.Login.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.NavbarComponent],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  display: block;\\n  margin-left: 80%;\\n  margin-top: 30%;\\n  text-align: left;\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtDQUFrQztFQUNsQyxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcclxuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IDgwJTtcclxuICBtYXJnaW4tdG9wOiAzMCU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","Swal","JwtHelperService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","email","Login","get","password","constructor","notesService","router","required","error","ngOnInit","login","_this","_ref","value","subscribe","_x","_asyncToGenerator","token","r","JSON","parse","console","log","fire","title","icon","helper","decodedToken","decodeToken","loginUser","timer","showConfirmButton","localStorage","setItem","id","navigate","apply","arguments","ɵɵdirectiveInject","i1","NotesService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_12_listener","ɵɵtemplate","LoginComponent_span_18_Template","LoginComponent_span_21_Template","ɵɵadvance","ɵɵproperty","invalid","touched"],"sources":["C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.ts","C:\\Users\\namangarg01\\Desktop\\Angular Codes\\MiniExitAssignment\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotesService } from '../services/notes.service';\nimport Swal from 'sweetalert2';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n// import Swal from 'sweetalert2';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  Login = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n  });\n  error = false;\n\n  get email() {\n    return this.Login.get('email');\n  }\n  get password() {\n    return this.Login.get('password');\n  }\n\n  constructor(private notesService: NotesService, private router: Router) {}\n\n  ngOnInit(): void {}\n  r: any;\n\n  login() {\n    this.notesService.login(this.Login.value).subscribe(async (token) => {\n      this.r = JSON.parse(token);\n      console.log(this.r.token);\n      if (this.r.token === 'Bad ') {\n        await Swal.fire({\n          title:\n            \"<h5 style='color:red;font-size:20px'>Wrong Credentials!!!</h5>\",\n          icon: 'error',\n        });\n        this.error = true;\n      } else {\n        const helper = new JwtHelperService();\n\n        const decodedToken = helper.decodeToken(token);\n        console.log(decodedToken);\n\n        this.notesService.loginUser(this.r.token);\n\n        await Swal.fire({\n          title:\n            \"<h5 style='color:green;font-size:25px'>Logging In...Please Wait !</h5>\",\n          timer: 1000,\n          showConfirmButton: false,\n          icon: 'success',\n        });\n        localStorage.setItem('id', decodedToken.id);\n        this.router.navigate(['home']);\n      }\n    });\n  }\n}\n","<html>\n  <head>\n    <title>Notes Management System</title>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n      crossorigin=\"anonymous\"\n    />\n  </head>\n  <body>\n    <app-navbar></app-navbar>\n    <div class=\"form-bg\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"fixed-header\">\n            <div class=\"form-container\">\n              <form\n                [formGroup]=\"Login\"\n                (ngSubmit)=\"login()\"\n                class=\"form-horizontal\"\n              >\n                <h3 class=\"title\">Login Form</h3>\n                <br />\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    formControlName=\"email\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"email && email.invalid && email.touched\"\n                  >Email is required</span\n                >\n                <div class=\"form-group\">\n                  <input\n                    class=\"form-control\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    id=\"password\"\n                    name=\"password\"\n                    formControlName=\"password\"\n                    autocomplete=\"on\"\n                  />\n                </div>\n                <span\n                  style=\"color: red\"\n                  *ngIf=\"password?.invalid && password?.touched\"\n                  >Password is required</span\n                >\n                <br />\n                <button\n                  class=\"btn btn-primary signin mt-2\"\n                  [disabled]=\"Login.invalid\"\n                >\n                  Log in\n                </button>\n                <br /><br />\n                <h6 class=\"register\">\n                  Do Not Have an Account? Click Here to\n                  <a href=\"registration\" style=\"font-size: 16px\">Register</a>\n                </h6>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}